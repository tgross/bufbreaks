// +build old,!new

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: structs.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TaskStatsResponse struct {
	Stats                *TaskStats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TaskStatsResponse) Reset()         { *m = TaskStatsResponse{} }
func (m *TaskStatsResponse) String() string { return proto.CompactTextString(m) }
func (*TaskStatsResponse) ProtoMessage()    {}
func (*TaskStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e774e8f5f348d14d, []int{0}
}

func (m *TaskStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskStatsResponse.Unmarshal(m, b)
}
func (m *TaskStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskStatsResponse.Marshal(b, m, deterministic)
}
func (m *TaskStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskStatsResponse.Merge(m, src)
}
func (m *TaskStatsResponse) XXX_Size() int {
	return xxx_messageInfo_TaskStatsResponse.Size(m)
}
func (m *TaskStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskStatsResponse proto.InternalMessageInfo

func (m *TaskStatsResponse) GetStats() *TaskStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type TaskStats struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TaskStats) Reset()         { *m = TaskStats{} }
func (m *TaskStats) String() string { return proto.CompactTextString(m) }
func (*TaskStats) ProtoMessage()    {}
func (*TaskStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_e774e8f5f348d14d, []int{1}
}

func (m *TaskStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskStats.Unmarshal(m, b)
}
func (m *TaskStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskStats.Marshal(b, m, deterministic)
}
func (m *TaskStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskStats.Merge(m, src)
}
func (m *TaskStats) XXX_Size() int {
	return xxx_messageInfo_TaskStats.Size(m)
}
func (m *TaskStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskStats.DiscardUnknown(m)
}

var xxx_messageInfo_TaskStats proto.InternalMessageInfo

func (m *TaskStats) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TaskStats) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*TaskStatsResponse)(nil), "hashicorp.nomad.plugins.drivers.proto.TaskStatsResponse")
	proto.RegisterType((*TaskStats)(nil), "hashicorp.nomad.plugins.drivers.proto.TaskStats")
}

func init() {
	proto.RegisterFile("structs.proto", fileDescriptor_e774e8f5f348d14d)
}

var fileDescriptor_e774e8f5f348d14d = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x2e, 0x29, 0x2a,
	0x4d, 0x2e, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x52, 0xcd, 0x48, 0x2c, 0xce, 0xc8,
	0x4c, 0xce, 0x2f, 0x2a, 0xd0, 0xcb, 0xcb, 0xcf, 0x4d, 0x4c, 0xd1, 0x2b, 0xc8, 0x29, 0x4d, 0xcf,
	0xcc, 0x2b, 0xd6, 0x4b, 0x29, 0xca, 0x2c, 0x4b, 0x2d, 0x82, 0x2a, 0x93, 0x92, 0x4f, 0xcf, 0xcf,
	0x4f, 0xcf, 0x49, 0xd5, 0x07, 0xf3, 0x92, 0x4a, 0xd3, 0xf4, 0x4b, 0x32, 0x73, 0x53, 0x8b, 0x4b,
	0x12, 0x73, 0x0b, 0x20, 0x0a, 0x94, 0xa2, 0xb9, 0x04, 0x43, 0x12, 0x8b, 0xb3, 0x83, 0x4b, 0x12,
	0x4b, 0x8a, 0x83, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xdc, 0xb8, 0x58, 0x8b, 0x41,
	0x02, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x06, 0x7a, 0x44, 0x59, 0xa6, 0x87, 0x30, 0x08,
	0xa2, 0x5d, 0x29, 0x94, 0x8b, 0x13, 0x2e, 0x26, 0xc4, 0xc7, 0xc5, 0x94, 0x99, 0x02, 0x36, 0x91,
	0x33, 0x88, 0x29, 0x33, 0x45, 0xc8, 0x82, 0x8b, 0x13, 0xee, 0x18, 0x09, 0x26, 0xb0, 0x45, 0x52,
	0x7a, 0x10, 0xe7, 0xea, 0xc1, 0x9c, 0xab, 0x17, 0x02, 0x53, 0x11, 0x84, 0x50, 0xec, 0xc4, 0x16,
	0xc5, 0x92, 0x9b, 0x98, 0x99, 0x97, 0xc4, 0x06, 0x56, 0x66, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x06, 0xcb, 0x5f, 0x79, 0x1b, 0x01, 0x00, 0x00,
}
